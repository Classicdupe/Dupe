plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group 'xyz.prorickey.classicdupe'
version '4.3.2'

repositories {
    mavenCentral()
    maven { url "https://repo.papermc.io/repository/maven-public/" }
    maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url "https://maven.enginehub.org/repo/" }
    maven { url 'https://repo.prorickey.xyz/repository/maven-public'}
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT'

    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'me.clip:placeholderapi:2.11.2'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.9-SNAPSHOT'
    compileOnly 'me.lucko:spark-api:0.1-SNAPSHOT'

    compileOnly 'com.h2database:h2:2.1.214'
    compileOnly 'net.dv8tion:JDA:5.0.0-beta.10'
    compileOnly 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
    compileOnly 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'

    implementation 'xyz.prorickey:proutils:1.0.1'
    implementation 'xyz.xenondevs:particle:1.8.4'
}

shadowJar {
    archiveClassifier = null
}

jar {
    enabled = false
    dependsOn(shadowJar)
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}